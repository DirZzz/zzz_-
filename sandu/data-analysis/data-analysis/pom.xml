<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sandu</groupId>
    <artifactId>data-analysis</artifactId>
    <version>1.0-SNAPSHOT</version>
    
    <repositories>
		<repository>
			<id>cloudera</id>
			<name>cloudera</name>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
	</repositories>

    <dependencies>
    	<!-- 由于集成环境和线上环境的spark版本是1.6, 所以jar包换成版本1.6 -->
	    <!-- <dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-core_2.11</artifactId>
		    <version>2.4.0-cdh6.2.0</version>
		    <scope>provided</scope>
		</dependency> -->
		
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-core_2.10</artifactId>
		    <version>1.6.0-cdh5.15.2</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-sql_2.11</artifactId>
		    <version>2.4.0-cdh6.2.0</version>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming_2.11</artifactId>
		    <version>2.4.0-cdh6.2.0</version>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-hive_2.11</artifactId>
		    <version>2.4.0-cdh6.2.0</version>
		    <scope>provided</scope>
		</dependency>
	
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
		    <version>2.4.0-cdh6.2.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>2.10.5</version>
		</dependency>

        <dependency>
		    <groupId>commons-dbutils</groupId>
		    <artifactId>commons-dbutils</artifactId>
		    <version>1.7</version>
		</dependency>
		
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.6</version>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>6.0.6</version>
        </dependency>
        
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>3.3.1</version>
		</dependency>
				
			

    </dependencies>
    
    <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/main/test</testSourceDirectory>
	
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass></mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>java</executable>
          <includeProjectDependencies>true</includeProjectDependencies>
          <includePluginDependencies>false</includePluginDependencies>
          <classpathScope>compile</classpathScope>
          <mainClass>com.sandu.spark.test.App</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
        	<encoding>utf-8</encoding>
			<source>1.8</source>
			<target>1.8</target>
        </configuration>
      </plugin>

		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>2.6</version>
			<executions>
				<execution>
					<id>copy-resources</id>
					<phase>compile</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<!-- 覆盖原有文件 -->
						<overwrite>true</overwrite>
						<outputDirectory>${project.build.outputDirectory}</outputDirectory>
						<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
						<!-- 待处理的资源定义 -->
						<resources>
							<resource>
								<!-- 指定resources插件处理哪个目录下的资源文件 -->
								<directory>src/main/resources/${package.environment}</directory>
								<filtering>false</filtering>
							</resource>
						</resources>
					</configuration>
					<inherited></inherited>
				</execution>
			</executions>
		</plugin>

    </plugins>
    
  </build>

	<profiles>
	    <profile>
	        <id>ci</id>
	        <!-- <activation>
	            <activeByDefault>true</activeByDefault>
	        </activation> -->
	        <properties>
	            <package.environment>ci</package.environment>
	        </properties>
	    </profile>
	    <profile>
	        <id>online</id>
	        <properties>
	            <package.environment>online</package.environment>
	        </properties>
	    </profile>
	</profiles>

</project>