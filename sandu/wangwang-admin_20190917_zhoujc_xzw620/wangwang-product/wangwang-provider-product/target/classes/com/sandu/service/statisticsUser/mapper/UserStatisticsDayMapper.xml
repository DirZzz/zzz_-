<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sandu.service.statisticsUser.dao.UserStatisticsDayMapper">

    <select id="selectDayUserList" parameterType="com.sandu.api.statisticsUser.model.UserStatistics"
            resultType="com.sandu.api.statisticsUser.model.UserStatistics">
        select
        id,
        <if test="type == 1">
            sum(new_user_count) newUserCount,
        </if>
        <if test="type == 0">
            sum(active_user_count) activeUserCount,
            sum(login_user_count_pc2b) loginUserCountPc2b,
            sum(login_user_count_mobile2b) loginUserCountMobile2b,
            sum(login_user_count_merchantManage) loginUserCountMerchantManage,
        </if>
        DATE_FORMAT ( start_time, '%Y/%m/%d' ) start_time
        from
        data_statistics.bigdata_user_statistics_2b_day
        where is_deleted = 0
        <if test="type == 1">
            and new_user_count &lt;&gt; 0
        </if>
        <if test="type == 0">
            and active_user_count &lt;&gt; 0
        </if>
        <if test="userType != null">
            and user_type = #{userType,jdbcType=INTEGER}
        </if>
        <if test="useType != null">
            and use_type = #{useType,jdbcType=INTEGER}
        </if>
        <if test="time == 1">
            and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 2">
            and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 3">
            and PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( start_time, '%Y%m' ) ) =1
        </if>
        group by start_time
        ORDER BY start_time DESC
    </select>

    <select id="selectDayUserTotal" parameterType="com.sandu.api.statisticsUser.model.UserStatistics"
            resultType="com.sandu.api.statisticsUser.model.UserStatistics">
        select
        sum(active_user_count) as activeUserTotal,
        sum(new_user_count) as newUserTotal,
        sum(login_user_count_pc2b) as loginPc2bTotal,
        sum(login_user_count_mobile2b) as loginMobile2bTotal,
        sum(login_user_count_merchantManage) as loginMerchantManageTotal
        from
        data_statistics.bigdata_user_statistics_2b_day
        where is_deleted = 0
        <if test="userType != null">
            and user_type = #{userType,jdbcType=INTEGER}
        </if>
        <if test="useType != null">
            and use_type = #{useType,jdbcType=INTEGER}
        </if>
        <if test="time == 0">
            and TO_DAYS( NOW( ) ) - TO_DAYS(start_time) = 1
        </if>
        <if test="time == 1">
            and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 2">
            and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 3">
            and PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( start_time, '%Y%m' ) ) =1
        </if>
    </select>

    <select id="selectAccountAndNonactivatedTotal" parameterType="com.sandu.api.statisticsUser.model.UserStatistics"
            resultType="com.sandu.api.statisticsUser.model.UserStatistics">
        select
        sum(account_count) as accountTotal,
        sum(nonactivated_user_count) as nonactivatedTotal
        from
        data_statistics.bigdata_user_statistics_2b_day
        where is_deleted = 0
        <if test="userType != null">
            and user_type = #{userType,jdbcType=INTEGER}
        </if>
        <if test="useType != null">
            and use_type = #{useType,jdbcType=INTEGER}
        </if>
    </select>


    <select id="selectDayUserChart" parameterType="com.sandu.api.statisticsUser.model.UserStatistics"
            resultType="com.sandu.api.statisticsUser.model.UserStatistics">
        SELECT
        IFNULL( a.newUserCount, 0 ) newUserCount,
        IFNULL( a.activeUserCount, 0 ) activeUserCount,
        IFNULL( a.loginUserCountPc2b, 0 ) loginUserCountPc2b,
        IFNULL( a.loginUserCountMobile2b, 0 ) loginUserCountMobile2b,
        IFNULL( a.loginUserCountMerchantManage, 0 ) loginUserCountMerchantManage,
        b.dates AS startTime
        FROM
        (
        SELECT
        id,
        sum( new_user_count ) newUserCount,
        sum( active_user_count ) activeUserCount,
        sum( login_user_count_pc2b ) loginUserCountPc2b,
        sum( login_user_count_mobile2b ) loginUserCountMobile2b,
        sum( login_user_count_merchantManage ) loginUserCountMerchantManage,
        DATE_FORMAT ( start_time, '%m/%d' ) AS startTime
        FROM
        data_statistics.bigdata_user_statistics_2b_day
        WHERE
        is_deleted = 0
        <if test="userType != null">
            and user_type = #{userType,jdbcType=INTEGER}
        </if>
        <if test="useType != null">
            and use_type = #{useType,jdbcType=INTEGER}
        </if>
        <if test="time == 1">
            and DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 2">
            and DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(start_time)
        </if>
        <if test="time == 3">
            and PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( start_time, '%Y%m' ) ) =1
        </if>
        GROUP BY
        startTime
        ORDER BY
        startTime ASC
        ) a
        RIGHT JOIN (
        SELECT
        DATE_FORMAT ( @date := DATE_ADD( @date, INTERVAL - 1 DAY ), '%m/%d' ) dates
        FROM
        <if test="time == 3">
            (SELECT @date := DATE_ADD(date_add(curdate(),interval -day(curdate())+1 day), INTERVAL 0 day )
            FROM sys_user) days
        </if>
        <if test="time == 1 or time == 2">
            ( SELECT @date := DATE_ADD( NOW( ), INTERVAL 0 DAY ) FROM sys_user ) days
        </if>
        <if test="time == 1">
            LIMIT 7
        </if>
        <if test="time == 2">
            LIMIT 30
        </if>
        <if test="time == 3">
            LIMIT #{day}
        </if>
        ) b ON b.dates = a.startTime
        ORDER BY
        b.dates ASC
    </select>


</mapper>